/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './CacheModule';
import * as import2 from './zone/NgZoneGlobalCache';
import * as import3 from './memory/MemoryGlobalCache';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/zone/ng_zone';
class CacheModuleInjector extends import0.NgModuleInjector<import1.CacheModule> {
  _CacheModule_0:import1.CacheModule;
  __NgZoneGlobalCache_1:import2.NgZoneGlobalCache;
  __MemoryGlobalCache_2:import3.MemoryGlobalCache;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgZoneGlobalCache_1():import2.NgZoneGlobalCache {
    if ((this.__NgZoneGlobalCache_1 == (null as any))) { (this.__NgZoneGlobalCache_1 = new import2.NgZoneGlobalCache(this.parent.get(import5.NgZone))); }
    return this.__NgZoneGlobalCache_1;
  }
  get _MemoryGlobalCache_2():import3.MemoryGlobalCache {
    if ((this.__MemoryGlobalCache_2 == (null as any))) { (this.__MemoryGlobalCache_2 = new import3.MemoryGlobalCache()); }
    return this.__MemoryGlobalCache_2;
  }
  createInternal():import1.CacheModule {
    this._CacheModule_0 = new import1.CacheModule();
    return this._CacheModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.CacheModule)) { return this._CacheModule_0; }
    if ((token === import2.NgZoneGlobalCache)) { return this._NgZoneGlobalCache_1; }
    if ((token === import3.MemoryGlobalCache)) { return this._MemoryGlobalCache_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const CacheModuleNgFactory:import0.NgModuleFactory<import1.CacheModule> = new import0.NgModuleFactory(CacheModuleInjector,import1.CacheModule);